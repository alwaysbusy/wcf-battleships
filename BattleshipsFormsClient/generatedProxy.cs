//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://com.hurfo.wcfbattle", ConfigurationName="IBattleships")]
public interface IBattleships
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/Attack", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/AttackResponse")]
    int Attack(int player, int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/Attack", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/AttackResponse")]
    System.Threading.Tasks.Task<int> AttackAsync(int player, int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/CurrentTurn", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/CurrentTurnResponse")]
    int CurrentTurn();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/CurrentTurn", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/CurrentTurnResponse")]
    System.Threading.Tasks.Task<int> CurrentTurnAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/CreateGrid", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/CreateGridResponse")]
    void CreateGrid(int player, int[] grid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/CreateGrid", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/CreateGridResponse")]
    System.Threading.Tasks.Task CreateGridAsync(int player, int[] grid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/AddPlayer", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/AddPlayerResponse")]
    int AddPlayer();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/AddPlayer", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/AddPlayerResponse")]
    System.Threading.Tasks.Task<int> AddPlayerAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/GameState", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/GameStateResponse")]
    System.Tuple<int, int[]> GameState();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://com.hurfo.wcfbattle/IBattleships/GameState", ReplyAction="http://com.hurfo.wcfbattle/IBattleships/GameStateResponse")]
    System.Threading.Tasks.Task<System.Tuple<int, int[]>> GameStateAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IBattleshipsChannel : IBattleships, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class BattleshipsClient : System.ServiceModel.ClientBase<IBattleships>, IBattleships
{
    
    public BattleshipsClient()
    {
    }
    
    public BattleshipsClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public BattleshipsClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BattleshipsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BattleshipsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int Attack(int player, int x, int y)
    {
        return base.Channel.Attack(player, x, y);
    }
    
    public System.Threading.Tasks.Task<int> AttackAsync(int player, int x, int y)
    {
        return base.Channel.AttackAsync(player, x, y);
    }
    
    public int CurrentTurn()
    {
        return base.Channel.CurrentTurn();
    }
    
    public System.Threading.Tasks.Task<int> CurrentTurnAsync()
    {
        return base.Channel.CurrentTurnAsync();
    }
    
    public void CreateGrid(int player, int[] grid)
    {
        base.Channel.CreateGrid(player, grid);
    }
    
    public System.Threading.Tasks.Task CreateGridAsync(int player, int[] grid)
    {
        return base.Channel.CreateGridAsync(player, grid);
    }
    
    public int AddPlayer()
    {
        return base.Channel.AddPlayer();
    }
    
    public System.Threading.Tasks.Task<int> AddPlayerAsync()
    {
        return base.Channel.AddPlayerAsync();
    }
    
    public System.Tuple<int, int[]> GameState()
    {
        return base.Channel.GameState();
    }
    
    public System.Threading.Tasks.Task<System.Tuple<int, int[]>> GameStateAsync()
    {
        return base.Channel.GameStateAsync();
    }
}
